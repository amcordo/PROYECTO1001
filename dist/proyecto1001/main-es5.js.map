{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/add-customer/add-customer.component.ts","webpack:///src/app/components/add-customer/add-customer.component.html","webpack:///src/app/components/add-mascotas/add-mascotas.component.ts","webpack:///src/app/components/add-mascotas/add-mascotas.component.html","webpack:///src/app/components/add-medicamentos/add-medicamentos.component.ts","webpack:///src/app/components/add-medicamentos/add-medicamentos.component.html","webpack:///src/app/components/edit-customer/edit-customer.component.ts","webpack:///src/app/components/edit-customer/edit-customer.component.html","webpack:///src/app/components/edit-mascotas/edit-mascotas.component.ts","webpack:///src/app/components/edit-mascotas/edit-mascotas.component.html","webpack:///src/app/components/edit-medicamentos/edit-medicamentos.component.ts","webpack:///src/app/components/edit-medicamentos/edit-medicamentos.component.html","webpack:///src/app/components/inicio/inicio.component.ts","webpack:///src/app/components/inicio/inicio.component.html","webpack:///src/app/components/list-customer/list-customer.component.ts","webpack:///src/app/components/list-customer/list-customer.component.html","webpack:///src/app/components/list-mascotas/list-mascotas.component.ts","webpack:///src/app/components/list-mascotas/list-mascotas.component.html","webpack:///src/app/components/list-medicamentos/list-medicamentos.component.ts","webpack:///src/app/components/list-medicamentos/list-medicamentos.component.html","webpack:///src/app/services/customer.service.ts","webpack:///src/app/services/mascotas.service.ts","webpack:///src/app/services/medicamentos.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","useHash","declarations","imports","providers","bootstrap","ROUTES","path","component","pathMatch","redirectTo","AddCustomerComponent","formBuilder","router","service","addForm","group","cedula","required","nombre","apellido","direccion","telefono","createCustomer","value","subscribe","data","navigate","fire","icon","confirmButtonText","onSubmit","styles","AddMascotasComponent","raza","edad","peso","propietario","medicamento","createMascotas","AddMedicamentosComponent","identificacion","dosis","createMedicamentos","EditCustomerComponent","customerId","localStorage","getItem","alert","editForm","getCustomer","patchValue","updateCustomer","pipe","position","showConfirmButton","timer","error","EditMascotasComponent","mascotasId","getMascota","updateMascotas","EditMedicamentosComponent","medicamentosId","getMedicamento","updateMedicamentos","InicioComponent","ListCustomerComponent","getCustomers","customers","customer","text","showCancelButton","confirmButtonColor","cancelButtonColor","result","deleteCustomer","next","removeItem","setItem","toString","addCustomer","ListMascotasComponent","getMascotas","mascotas","deleteMascotas","addMascotas","ListMedicamentosComponent","getMedicamentos","medicamentos","deleteMedicamentos","addMedicamentos","CustomerService","http","baseUrl","httpHeaders","console","log","get","post","headers","put","providedIn","MascotasServices","MedicamentosServices","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'trabajoRest';\n}\n","<div class=\"container mt-5\">\n<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { ListCustomerComponent } from './components/list-customer/list-customer.component';\nimport { AddMascotasComponent } from './components/add-mascotas/add-mascotas.component';\nimport { EditMascotasComponent } from './components/edit-mascotas/edit-mascotas.component';\nimport { ListMascotasComponent } from './components/list-mascotas/list-mascotas.component';\nimport { AddMedicamentosComponent } from './components/add-medicamentos/add-medicamentos.component';\nimport { EditMedicamentosComponent } from './components/edit-medicamentos/edit-medicamentos.component';\nimport { ListMedicamentosComponent } from './components/list-medicamentos/list-medicamentos.component';\n\n// Importar rutas\nimport { ROUTES } from './app.routes';\nimport { RouterModule } from '@angular/router';\n\n// Importar ReactiveFormsModule para los formularios\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InicioComponent } from './components/inicio/inicio.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCustomerComponent,\n    EditCustomerComponent,\n    ListCustomerComponent,\n    AddMascotasComponent,\n    EditMascotasComponent,\n    ListMascotasComponent,\n    AddMedicamentosComponent,\n    EditMedicamentosComponent,\n    ListMedicamentosComponent,\n    InicioComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot( ROUTES, { useHash: true } ),\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { ListCustomerComponent } from './components/list-customer/list-customer.component';\n\nimport { AddMascotasComponent } from './components/add-mascotas/add-mascotas.component';\nimport { EditMascotasComponent } from './components/edit-mascotas/edit-mascotas.component';\nimport { ListMascotasComponent } from './components/list-mascotas/list-mascotas.component';\n\nimport { AddMedicamentosComponent } from './components/add-medicamentos/add-medicamentos.component';\nimport { EditMedicamentosComponent } from './components/edit-medicamentos/edit-medicamentos.component';\nimport { ListMedicamentosComponent } from './components/list-medicamentos/list-medicamentos.component';\nimport { InicioComponent } from './components/inicio/inicio.component';\n\nexport const ROUTES: Routes = [\n    { path: 'add-customer', component: AddCustomerComponent },\n    { path: 'edit-customer', component: EditCustomerComponent },\n    { path: 'list-customer', component: ListCustomerComponent },\n\n    { path: 'add-mascotas', component: AddMascotasComponent },\n    { path: 'edit-mascotas', component: EditMascotasComponent },\n    { path: 'list-mascotas', component: ListMascotasComponent },\n\n    { path: 'add-medicamentos', component: AddMedicamentosComponent },\n    { path: 'edit-medicamentos', component: EditMedicamentosComponent },\n    { path: 'list-medicamentos', component: ListMedicamentosComponent },\n    { path: '', pathMatch: 'full', component: InicioComponent },\n    { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styles: []\n})\nexport class AddCustomerComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: CustomerService) { }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      cedula: ['', Validators.required],\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      direccion: ['', Validators.required],\n      telefono: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.service.createCustomer( this.addForm.value )\n      .subscribe(data => {\n        this.router.navigate(['list-customer']);\n        Swal.fire({\n          title: 'Cliente creado con éxito!',\n          //text: 'Do you want to continue',\n           icon: 'success',\n           confirmButtonText: 'Aceptar'\n        });\n       /* swal({\n          position: 'top',\n          type: 'success',\n          title: `Cliente creado con éxito`,\n          showConfirmButton: false,\n          timer: 1500\n        });*/\n      });\n  }\n\n}\n","<div class=\"col\">\n  <h2 class=\"text-center\">Agregar Cliente</h2>\n <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"form-group\">\n    <label for=\"cedula\">Cedula:</label>\n    <input formControlName=\"cedula\" placeholder=\"Cedula\" name=\"cedula\" class=\"form-control\" id=\"cedula\" required>\n  </div>\n\n  <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"apellido\">Apellido:</label>\n      <input formControlName=\"apellido\" placeholder=\"Apellido\" name=\"apellido\" class=\"form-control\" id=\"apellido\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"direccion\">Direccion:</label>\n      <input type=\"direccion\" formControlName=\"direccion\" placeholder=\"Direccion\" name=\"direccion\" class=\"form-control\" id=\"direccion\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"telefono\">Telefono:</label>\n      <input type=\"telefono\" formControlName=\"telefono\" placeholder=\"Telefono\" name=\"telefono\" class=\"form-control\" id=\"telefono\" required>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-customer\">Regresar</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MascotasServices } from '../../services/mascotas.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-mascotas',\n  templateUrl: './add-mascotas.component.html',\n  styles: []\n})\n\nexport class AddMascotasComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: MascotasServices) { }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      id: [],\n      nombre: ['', Validators.required],\n      raza: ['', Validators.required],\n      edad: ['', Validators.required],\n      peso: ['', Validators.required],\n      propietario: ['', Validators.required],\n      medicamento: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.service.createMascotas( this.addForm.value )\n      .subscribe(data => {\n        this.router.navigate(['list-mascotas']);\n        Swal.fire({\n          title: 'Mascota creada con éxito!',\n          //text: 'Do you want to continue',\n           icon: 'success',\n           confirmButtonText: 'Aceptar'\n        });\n       /* swal({\n          position: 'top',\n          type: 'success',\n          title: `Cliente creado con éxito`,\n          showConfirmButton: false,\n          timer: 1500\n        });*/\n      });\n  }\n\n}\n","<div class=\"col\">\n  <h2 class=\"text-center\">Agregar Mascota</h2>\n  <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"raza\">Raza:</label>\n      <input formControlName=\"raza\" placeholder=\"Raza\" name=\"raza\" class=\"form-control\" id=\"raza\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"edad\">Edad:</label>\n      <input type=\"edad\" formControlName=\"edad\" placeholder=\"Edad\" name=\"edad\" class=\"form-control\" id=\"edad\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"peso\">Peso:</label>\n      <input type=\"peso\" formControlName=\"peso\" placeholder=\"Peso\" name=\"peso\" class=\"form-control\" id=\"peso\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"propietario\">Propietario:</label>\n      <input type=\"propietario\" formControlName=\"propietario\" placeholder=\"Propietario\" name=\"propietario\" class=\"form-control\" id=\"propietario\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"medicamento\">Medicamento:</label>\n      <input type=\"medicamento\" formControlName=\"medicamento\" placeholder=\"Medicamento\" name=\"medicamento\" class=\"form-control\" id=\"medicamento\" required>\n    </div>\n\n    <button class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-mascotas\">Regresar</button>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MedicamentosServices } from '../../services/medicamentos.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-medicamentos',\n  templateUrl: './add-medicamentos.component.html',\n  styles: []\n})\n\nexport class AddMedicamentosComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: MedicamentosServices) { }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      id: [],\n      identificacion: ['', Validators.required],\n      nombre: ['', Validators.required],\n      dosis: ['', Validators.required]\n   });\n  }\n\n  onSubmit() {\n    this.service.createMedicamentos( this.addForm.value )\n      .subscribe(data => {\n        this.router.navigate(['list-medicamentos']);\n        Swal.fire({\n          title: 'Medicamento creado con éxito!',\n           icon: 'success',\n           confirmButtonText: 'Aceptar'\n        });\n       /* swal({\n          position: 'top',\n          type: 'success',\n          title: `Cliente creado con éxito`,\n          showConfirmButton: false,\n          timer: 1500\n        });*/\n      });\n  }\n\n}\n","<div class=\"col\">\n  <h2 class=\"text-center\">Agregar Medicamentos</h2>\n  <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n      <label for=\"identificacion\">Identificacion:</label>\n      <input formControlName=\"identificacion\" placeholder=\"Identificacion\" name=\"identificacion\" class=\"form-control\" id=\"identificacion\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"dosis\">Dosis:</label>\n      <input formControlName=\"dosis\" placeholder=\"Dosis\" name=\"dosis\" class=\"form-control\" id=\"dosis\" required>\n    </div>\n\n\n    <button class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-medicamentos\">Regresar</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../../model/customer';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CustomerService } from '../../services/customer.service';\nimport { Router } from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styles: []\n})\nexport class EditCustomerComponent implements OnInit {\n\n  customer: Customer;\n  editForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: CustomerService) { }\n\n  ngOnInit() {\n\n    const customerId = localStorage.getItem('editCustomerId');\n\n    if ( !customerId ) {\n      alert('Acción invalida');\n      this.router.navigate(['list-customer']);\n      return;\n    }\n\n    this.editForm = this.formBuilder.group({\n      id: [],\n      cedula: ['', Validators.required],\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      direccion: ['', Validators.required],\n      telefono: ['', Validators.required]\n    });\n\n    this.service.getCustomer(+customerId)\n      .subscribe(data => {\n        this.editForm.patchValue({\n          id: data.id,\n          cedula: data.cedula,\n          nombre: data.nombre,\n          apellido: data.apellido,\n          direccion: data.direccion,\n          telefono: data.telefono\n        });\n      });\n  }\n\n  onSubmit() {\n    this.service.updateCustomer(this.editForm.value)\n      .pipe(first())\n      .subscribe( data => {\n        this.router.navigate(['list-customer']);\n\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Cliente modificado con exito',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      },\n      error => {\n        alert(error);\n      });\n  }\n\n}\n","<div class=\"col\">\n  <h2 class=\"text-center\">Editar Cliente</h2>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n      <label for=\"cedula\">Cèdula:</label>\n      <input formControlName=\"cedula\" placeholder=\"Cedula\" name=\"cedula\" class=\"form-control\" id=\"cedula\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"apellido\">Apellido:</label>\n      <input formControlName=\"apellido\" placeholder=\"Apellido\" name=\"apellido\" class=\"form-control\" id=\"apellido\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"direccion\">Direccion:</label>\n      <input  formControlName=\"direccion\" placeholder=\"Direccion\" name=\"direccion\" class=\"form-control\" id=\"direccion\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"telefono\">Telefono:</label>\n      <input type=\"tel\" formControlName=\"telefono\" placeholder=\"Telefono\" name=\"telefono\" class=\"form-control\" id=\"telefono\" required>\n    </div>\n\n    <button class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-customer\">Regresar</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Customer} from '../../model/customer';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {MascotasServices} from '../../services/mascotas.service';\nimport {first} from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-edit-mascotas',\n  templateUrl: './edit-mascotas.component.html',\n  styleUrls: ['./edit-mascotas.component.css']\n})\nexport class EditMascotasComponent implements OnInit {\n\n  customer: Customer;\n  editForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: MascotasServices) {\n  }\n\n  ngOnInit(): void {\n    const mascotasId = localStorage.getItem('editMascotasId');\n    if (!mascotasId) {\n      alert('Acción invalida');\n      this.router.navigate(['list-mascotas']);\n      return;\n    }\n    this.editForm = this.formBuilder.group({\n      id: [],\n      nombre: ['', Validators.required],\n      raza: ['', Validators.required],\n      edad: ['', Validators.required],\n      peso: ['', Validators.required],\n      propietario: ['', Validators.required],\n      medicamento: ['', Validators.required]\n    });\n\n    this.service.getMascota(+mascotasId)\n      .subscribe(data => {\n        this.editForm.patchValue({\n          id: data.id,\n          nombre: data.nombre,\n          raza: data.raza,\n          edad: data.edad,\n          peso: data.peso,\n          propietario: data.propietario,\n          medicamento: data.medicamento\n\n        });\n\n      });\n  }\n\n  onSubmit() {\n    this.service.updateMascotas(this.editForm.value)\n      .pipe(first())\n      .subscribe(data => {\n          this.router.navigate(['list-mascotas']);\n\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Cliente modificado con exito',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        },\n        error => {\n          alert(error);\n        });\n  }\n\n}\n\n\n","<div class=\"col\">\n  <h2 class=\"text-center\">Editar Mascota</h2>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"raza\">Raza:</label>\n      <input formControlName=\"raza\" placeholder=\"Raza\" name=\"raza\" class=\"form-control\" id=\"raza\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"edad\">Edad:</label>\n      <input formControlName=\"edad\" placeholder=\"Edad\" name=\"edad\" class=\"form-control\" id=\"edad\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"peso\">Peso:</label>\n      <input formControlName=\"peso\" placeholder=\"Peso\" name=\"peso\" class=\"form-control\" id=\"peso\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"propietario\">Propietario:</label>\n      <input formControlName=\"propietario\" placeholder=\"Propietario\" name=\"propietario\" class=\"form-control\" id=\"propietario\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"medicamento\">Medicamento:</label>\n      <input formControlName=\"medicamento\" placeholder=\"Medicamento\" name=\"medicamento\" class=\"form-control\" id=\"medicamento\" required>\n    </div>\n\n\n    <button class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-mascotas\">Regresar</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Customer} from '../../model/customer';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {MedicamentosServices} from '../../services/medicamentos.service';\n\n\n@Component({\n  selector: 'app-edit-medicamentos',\n  templateUrl: './edit-medicamentos.component.html',\n  styleUrls: ['./edit-medicamentos.component.css']\n})\nexport class EditMedicamentosComponent implements OnInit {\n\n  customer: Customer;\n  editForm: FormGroup;\n\n  constructor(private  formBuilder: FormBuilder, private  router: Router, private service: MedicamentosServices) {\n  }\n\n\n  ngOnInit(): void {\n    const medicamentosId = localStorage.getItem('editMedicamentosId');\n    if (!medicamentosId){\n      alert('Acción invalida');\n      this.router.navigate(['list-medicamentos']);\n      return;\n    }\n\n    this.editForm = this.formBuilder.group({\n      id: [],\n      identificacion: ['', Validators.required],\n      nombre: ['', Validators.required],\n      dosis: ['', Validators.required]\n    });\n\n    this.service.getMedicamento(+medicamentosId) .subscribe(data => {\n\n      this.editForm.patchValue({\n       id: data.id,\n        identificacion: data.identificacion,\n        nombre: data.nombre,\n        dosis: data.dosis\n\n      });\n    });\n\n}\n  onSubmit() {\n    this.service.updateMedicamentos(this.editForm.value).pipe(first())\n      .subscribe(data => {\n        this.router.navigate(['list-medicamentos']);\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Medicamento modificado con exito',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        },\n        error => {\n          alert(error);\n        });\n      }\n  }\n","<div class=\"col\">\n  <h2 class=\"text-center\">Editar Medicamentos</h2>\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"identificacion\">Identificacion:</label>\n      <input formControlName=\"identificacion\" placeholder=\"Identificacion\" name=\"identidicacion\" class=\"form-control\" id=\"identificacion\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input formControlName=\"nombre\" placeholder=\"Nombre\" name=\"nombre\" class=\"form-control\" id=\"nombre\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"dosis\">Dosis:</label>\n      <input formControlName=\"dosis\" placeholder=\"Dosis\" name=\"dosis\"class=\"form-control\" id=\"dosis\" required>\n    </div>\n\n    <button class=\"btn btn-success\">Aceptar</button>\n    <button class=\"btn btn-primary\" routerLink=\"/list-medicamentos\">Regresar</button>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <br> <br> <br> <br>\n  <h1 align=\"center\">ADMINISTRACION</h1>\n  <br>\n  <table class=\"table table-borderless\">\n    <thead>\n      <tr>\n        <th scope=\"col\">\n          <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/list-customer\">Clientes</button>\n        </th>\n        <th scope=\"col\">\n          <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"/list-mascotas\">Mascotas</button>\n        </th>\n        <th scope=\"col\">\n          <button type=\"button\" class=\"btn btn-success\" routerLink=\"/list-medicamentos\">Medicamentos</button>\n        </th>\n      </tr>\n    </thead>\n\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../../model/customer';\nimport { CustomerService } from '../../services/customer.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-customer',\n  templateUrl: './list-customer.component.html',\n  styles: []\n})\nexport class ListCustomerComponent implements OnInit {\n  customers: Customer[];\n\n  constructor(private router: Router, private service: CustomerService) {}\n\n  ngOnInit() {\n    this.service.getCustomers().subscribe(data => (this.customers = data));\n  }\n\n  deleteCustomer(customer: Customer): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        this.service.deleteCustomer(customer.id).subscribe({\n          next: result => {\n            Swal.fire(\n              'Deleted!',\n              'Your file has been deleted.',\n              'success'\n            );\n            this.service.getCustomers().subscribe({\n              next: result => {\n                this.customers=result;\n              }\n            });\n          },\n          error: error => {\n            Swal.fire(\n              'Error!',\n               error,\n              'warning'\n            );\n          }\n        })\n\n      }\n    });\n  }\n\n  editCustomer(customer: Customer): void {\n    localStorage.removeItem('editCustomerId');\n    localStorage.setItem('editCustomerId', customer.id.toString());\n    this.router.navigate(['edit-customer']);\n  }\n\n  addCustomer(): void {\n    this.router.navigate(['add-customer']);\n  }\n}\n","<div class=\"col\">\n  <h2>Clientes</h2>\n  <button class=\"btn btn-primary\" (click)=\"addCustomer()\">Agregar Cliente</button>\n  <button class=\"btn btn-secundary\" routerLink=\"/\">Volver</button>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th class=\"hidden\">Id</th>\n        <th>Cedula</th>\n        <th>Nombre</th>\n        <th>Apellido</th>\n        <th>Direccion</th>\n        <th>Telefono</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let customer of customers\">\n        <td class=\"hidden\">{{ customer.id }}</td>\n        <td>{{ customer.cedula }}</td>\n        <td>{{ customer.nombre }}</td>\n        <td>{{ customer.apellido }}</td>\n        <td>{{ customer.direccion }}</td>\n        <td>{{ customer.telefono }}</td>\n        <td>\n          <button class=\"btn btn-success\" (click)=\"editCustomer(customer)\">\n            Editar\n          </button>\n          <button class=\"btn btn-danger\" (click)=\"deleteCustomer(customer)\">\n            Borrar\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Mascotas } from '../../model/mascotas';\nimport { MascotasServices } from '../../services/mascotas.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-mascotas',\n  templateUrl: './list-mascotas.component.html',\n  styles: []\n})\nexport class ListMascotasComponent implements OnInit {\n  mascotas: Mascotas[];\n\n  constructor(private router: Router, private service: MascotasServices) {}\n\n  ngOnInit() {\n    this.service.getMascotas().subscribe(data => (this.mascotas = data));\n  }\n\ndeleteMascotas(mascotas: Mascotas): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        this.service.deleteMascotas(mascotas.id).subscribe({\n          next: result => {\n            Swal.fire(\n              'Deleted!',\n              'Your file has been deleted.',\n              'success'\n            );\n            this.service.getMascotas().subscribe({\n              next: result => {\n                this.mascotas=result;\n              }\n            });\n          },\n          error: error => {\n            Swal.fire(\n              'Error!',\n               error,\n              'warning'\n            );\n          }\n        })\n\n      }\n    });\n  }\n\n  editMascotas(mascotas: Mascotas): void {\n    localStorage.removeItem('editMascotasId');\n    localStorage.setItem('editMascotasId', mascotas.id.toString());\n    this.router.navigate(['edit-mascotas']);\n  }\n\n  addMascotas(): void {\n    this.router.navigate(['add-mascotas']);\n  }\n}\n","<div class=\"col\">\n  <h2>Mascotas</h2>\n  <button class=\"btn btn-primary\" (click)=\"addMascotas()\">Agregar Mascota</button>\n  <button class=\"btn btn-secundary\" routerLink=\"/\">Volver</button>\n  <table class=\"table table-striped\">\n  <thead>\n  <tr>\n    <th class=\"hidden\">Id</th>\n    <th>Nombre</th>\n    <th>Raza</th>\n    <th>Edad</th>\n    <th>Peso</th>\n    <th>Propietario</th>\n    <th>Medicamento</th>\n    <th></th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let mascotas of mascotas\">\n    <td class=\"hidden\">{{ mascotas.id }}</td>\n    <td>{{ mascotas.nombre }}</td>\n    <td>{{ mascotas.raza }}</td>\n    <td>{{ mascotas.edad }}</td>\n    <td>{{ mascotas.peso }}</td>\n    <td>{{ mascotas.propietario}}</td>\n    <td>{{ mascotas.medicamento}}</td>\n    <td>\n      <button class=\"btn btn-success\" (click)=\"editMascotas(mascotas)\">\n        Editar\n      </button>\n      <button class=\"btn btn-danger\" (click)=\"deleteMascotas(mascotas)\">\n        Borrar\n      </button>\n    </td>\n  </tr>\n  </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Medicamentos } from '../../model/medicamentos';\nimport { MedicamentosServices } from '../../services/medicamentos.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-list-medicamentos',\n  templateUrl: './list-medicamentos.component.html',\n  styles: []\n})\nexport class ListMedicamentosComponent implements OnInit {\n  medicamentos: Medicamentos[];\n\n  constructor(private router: Router, private service: MedicamentosServices) {}\n\n  ngOnInit() {\n    this.service.getMedicamentos().subscribe(data => (this.medicamentos = data));\n  }\n\n  deleteMedicamentos(medicamentos: Medicamentos): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        this.service.deleteMedicamentos(medicamentos.id).subscribe({\n          next: result => {\n            Swal.fire(\n              'Deleted!',\n              'Your file has been deleted.',\n              'success'\n            );\n            this.service.getMedicamentos().subscribe({\n              next: result => {\n                this.medicamentos=result;\n              }\n            });\n          },\n          error: error => {\n            Swal.fire(\n              'Error!',\n               error,\n              'warning'\n            );\n          }\n        })\n\n      }\n    });\n\n  }\n\n  editMedicamentos(medicamentos: Medicamentos): void {\n    localStorage.removeItem('editMedicamentosId');\n    localStorage.setItem('editMedicamentosId', medicamentos.id.toString());\n    this.router.navigate(['edit-medicamentos']);\n  }\n\n  addMedicamentos(): void {\n    this.router.navigate(['add-medicamentos']);\n  }\n}\n","<div class=\"col\">\n  <h2>Medicamentos</h2>\n  <button class=\"btn btn-primary\" (click)=\"addMedicamentos()\">Agregar Medicamento</button>\n  <button class=\"btn btn-secundary\" routerLink=\"/\">Volver</button>\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th class=\"hidden\">Id</th>\n\n      <th>Identificacion</th>\n      <th>Nombre</th>\n      <th>Dosis</th>\n      <th></th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let medicamentos of medicamentos\">\n      <td class=\"hidden\">{{ medicamentos.id }}</td>\n      <td>{{ medicamentos.identificacion }}</td>\n      <td>{{ medicamentos.nombre }}</td>\n      <td>{{ medicamentos.dosis }}</td>\n      <td>\n        <button class=\"btn btn-success\" (click)=\"editMedicamentos(medicamentos)\">\n          Editar\n        </button>\n        <button class=\"btn btn-danger\" (click)=\"deleteMedicamentos(medicamentos)\">\n          Borrar\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Customer } from '../model/customer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  private baseUrl = 'https://paralela-programacion.herokuapp.com/api/clientes';\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor( private http: HttpClient ) {\n    console.log('Servicio Customer Funcionando');\n  }\n\n  getCustomers(): Observable<Customer[]> {\n    return this.http.get(this.baseUrl).pipe(\n      map(data => data as Customer[])\n    );\n  }\n\n  getCustomer(id: number): Observable<Customer> {\n    return this.http.get<Customer>(`${this.baseUrl}/${id}`);\n  }\n\n  createCustomer(customer: Customer): Observable<Customer> {\n    return this.http.post<Customer>(this.baseUrl, customer, {headers: this.httpHeaders});\n  }\n\n  updateCustomer(customer: Customer): Observable<Customer> {\n    return this.http.put<Customer>(this.baseUrl, customer, {headers: this.httpHeaders});\n  }\n\n  deleteCustomer(id: number): Observable<Customer> {\n    return this.http.delete<Customer>(`${this.baseUrl}/${id}`, {headers: this.httpHeaders});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Mascotas } from '../model/mascotas';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MascotasServices {\n\n  private baseUrl = 'https://paralela-programacion.herokuapp.com/api/mascotas';\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json;charset=utf-8'});\n\n\n  constructor( private http: HttpClient ) {\n    console.log('Servicio Mascota Funcionando');\n  }\n\n\n  getMascotas(): Observable<Mascotas[]> {\n    return this.http.get(this.baseUrl).pipe(\n      map(data => data as Mascotas[])\n    );\n  }\n\n  getMascota(id: number): Observable<Mascotas> {\n    return this.http.get<Mascotas>(`${this.baseUrl}/${id}`);\n  }\n\n\n  createMascotas(mascotas: Mascotas): Observable<Mascotas> {\n    return this.http.post<Mascotas>(this.baseUrl, mascotas, {headers: this.httpHeaders});\n  }\n\n  updateMascotas(mascotas: Mascotas): Observable<Mascotas> {\n    return this.http.put<Mascotas>(this.baseUrl, mascotas, {headers: this.httpHeaders});\n  }\n\n  deleteMascotas(id: number): Observable<Mascotas> {\n    return this.http.delete<Mascotas>(`${this.baseUrl}/${id}`, {headers: this.httpHeaders});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicamentos } from '../model/medicamentos';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MedicamentosServices {\n\n  private baseUrl = 'https://paralela-programacion.herokuapp.com/api/medicamentos';\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor( private http: HttpClient ) {\n    console.log('Servicio Medicamentos Funcionando');\n  }\n\n\n  getMedicamentos(): Observable<Medicamentos[]> {\n    return this.http.get(this.baseUrl).pipe(\n      map(data => data as Medicamentos[])\n    );\n  }\n\n  getMedicamento(id: number): Observable<Medicamentos> {\n    return this.http.get<Medicamentos>(`${this.baseUrl}/${id}`);\n  }\n\n\n  createMedicamentos(medicamentos: Medicamentos): Observable<Medicamentos> {\n    return this.http.post<Medicamentos>(this.baseUrl, medicamentos, {headers: this.httpHeaders});\n  }\n\n  updateMedicamentos(medicamentos: Medicamentos): Observable<Medicamentos> {\n    return this.http.put<Medicamentos>(this.baseUrl, medicamentos, {headers: this.httpHeaders});\n  }\n\n  deleteMedicamentos(id: number): Observable<Medicamentos> {\n    return this.http.delete<Medicamentos>(`${this.baseUrl}/${id}`, {headers: this.httpHeaders});\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}